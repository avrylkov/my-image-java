apiVersion: v1
kind: Template
labels:
  template: custom-java-image
  group: custom-java-image
metadata:
  annotations:
    tags: custom-java-image, spring, java, spring-boot
  name: custom-java-image
parameters:
- name: APP_NAME
  description: The name of application.
  displayName: Application Name
  required: true
  value: openshift-jee-sample
- name: GIT_SOURCE_URL
  description: The source URL for the application
  displayName: Source URL
  required: true
  value: https://github.com/openshift/openshift-jee-sample.git
objects:
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      name: ${APP_NAME}
      labels:
        app: ${APP_NAME}
    spec:
      runPolicy: Serial
      source:
        git:
          uri: ${GIT_SOURCE_URL}
          ref: master
        contextDir: .
      strategy:
        dockerStrategy:
          dockerFilePath: Dockerfile
      resources:
        limits:
          cpu: 2
          memory: 2Gi
      output:
        to:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      triggers:
        - type: ConfigChange
      successfulBuildsHistoryLimit: 5
      failedBuildsHistoryLimit: 5
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: ${APP_NAME}
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      replicas: 1
      selector:
        app: ${APP_NAME}
        deploymentconfig: ${APP_NAME}
      strategy:
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: ${APP_NAME}
            deploymentconfig: ${APP_NAME}
        spec:
          containers:
          - image: ${APP_NAME}:latest
            imagePullPolicy: Always
            name: ${APP_NAME}
            ports:
            - containerPort: 8080
              protocol: TCP
            resources: {}
            terminationMessagePath: /dev/termination-log
            livenessProbe:
              httpGet:
                path: /
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 10
              timeoutSeconds: 2
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            readinessProbe:
              httpGet:
                path: /
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 30
              timeoutSeconds: 2
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APP_NAME}
          from:
            kind: ImageStreamTag
            name: ${APP_NAME}:latest
        type: ImageChange
    status: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      ports:
      - name: 8080-tcp
        port: 8080
        protocol: TCP
        targetPort: 8080
      selector:
        app: ${APP_NAME}
        deploymentconfig: ${APP_NAME}
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
